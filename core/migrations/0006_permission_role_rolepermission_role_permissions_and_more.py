# Generated by Django 5.2.6 on 2025-09-06 19:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("core", "0005_fix_empty_slugs"),
    ]

    operations = [
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codename",
                    models.CharField(
                        help_text="Unique permission identifier (e.g., 'workflow.create')",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human-readable permission name", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="What this permission allows users to do"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("workflow", "Workflow Management"),
                            ("workitem", "Work Item Management"),
                            ("team", "Team Management"),
                            ("user", "User Management"),
                            ("booking", "Booking Management"),
                            ("reporting", "Reporting & Analytics"),
                            ("system", "System Administration"),
                            ("custom", "Custom Permissions"),
                        ],
                        default="custom",
                        max_length=20,
                    ),
                ),
                (
                    "service",
                    models.CharField(
                        default="core",
                        help_text="Which service this permission belongs to",
                        max_length=50,
                    ),
                ),
                (
                    "is_global",
                    models.BooleanField(
                        default=False,
                        help_text="Can this permission affect the entire organization?",
                    ),
                ),
                (
                    "requires_resource",
                    models.BooleanField(
                        default=False,
                        help_text="Does this permission require a specific resource?",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["category", "name"],
                "indexes": [
                    models.Index(
                        fields=["category", "service"],
                        name="core_permis_categor_390a4e_idx",
                    ),
                    models.Index(
                        fields=["codename"], name="core_permis_codenam_1da12d_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Role name (e.g., 'Project Manager', 'Team Lead')",
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of what this role does"
                    ),
                ),
                (
                    "role_type",
                    models.CharField(
                        choices=[("system", "System Role"), ("custom", "Custom Role")],
                        default="custom",
                        max_length=20,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#6B7280",
                        help_text="Hex color for visual identification",
                        max_length=7,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Assign this role to new organization members",
                    ),
                ),
                (
                    "max_users",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum users that can have this role",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_roles",
                        to="core.userprofile",
                    ),
                ),
                (
                    "inherits_from",
                    models.ForeignKey(
                        blank=True,
                        help_text="Inherit permissions from another role",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_roles",
                        to="core.role",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "ordering": ["organization", "name"],
            },
        ),
        migrations.CreateModel(
            name="RolePermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "resource_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Limit permission to specific resource instance",
                        null=True,
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional conditions for permission (time, location, etc.)",
                    ),
                ),
                ("granted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "granted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="granted_permissions",
                        to="core.userprofile",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="role_assignments",
                        to="core.permission",
                    ),
                ),
                (
                    "resource_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Limit permission to specific resource type",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permission_assignments",
                        to="core.role",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="role",
            name="permissions",
            field=models.ManyToManyField(
                related_name="roles",
                through="core.RolePermission",
                to="core.permission",
            ),
        ),
        migrations.CreateModel(
            name="UserRoleAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("resource_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "valid_from",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this role assignment becomes active",
                        null=True,
                    ),
                ),
                (
                    "valid_until",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this role assignment expires",
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Reason for assignment or additional context",
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_roles",
                        to="core.userprofile",
                    ),
                ),
                (
                    "resource_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Scope role to specific resource type (e.g., specific team)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_assignments",
                        to="core.role",
                    ),
                ),
                (
                    "user_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="role_assignments",
                        to="core.userprofile",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="rolepermission",
            index=models.Index(
                fields=["role", "permission"], name="core_rolepe_role_id_777955_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rolepermission",
            index=models.Index(
                fields=["resource_type", "resource_id"],
                name="core_rolepe_resourc_6488c2_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rolepermission",
            unique_together={("role", "permission", "resource_type", "resource_id")},
        ),
        migrations.AddIndex(
            model_name="role",
            index=models.Index(
                fields=["organization", "is_active"],
                name="core_role_organiz_fce2e8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="role",
            index=models.Index(
                fields=["organization", "is_default"],
                name="core_role_organiz_1053ba_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="role",
            unique_together={("organization", "name")},
        ),
        migrations.AddIndex(
            model_name="userroleassignment",
            index=models.Index(
                fields=["user_profile", "is_active"],
                name="core_userro_user_pr_c82de9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userroleassignment",
            index=models.Index(
                fields=["role", "is_active"], name="core_userro_role_id_be2bac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userroleassignment",
            index=models.Index(
                fields=["resource_type", "resource_id"],
                name="core_userro_resourc_46bec9_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userroleassignment",
            unique_together={("user_profile", "role", "resource_type", "resource_id")},
        ),
    ]

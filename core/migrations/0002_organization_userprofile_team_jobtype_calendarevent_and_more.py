# Generated by Django 5.2.6 on 2025-09-03 19:18

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "time_format_24h",
                    models.BooleanField(
                        default=True, help_text="Use 24-hour time format"
                    ),
                ),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("address", models.TextField(blank=True)),
                ("website", models.URLField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=100)),
                ("department", models.CharField(blank=True, max_length=100)),
                ("location", models.CharField(blank=True, max_length=200)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("bio", models.TextField(blank=True)),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatars/"),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("mobile", models.CharField(blank=True, max_length=20)),
                ("is_organization_admin", models.BooleanField(default=False)),
                ("has_staff_panel_access", models.BooleanField(default=False)),
                ("email_notifications", models.BooleanField(default=True)),
                ("desktop_notifications", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="core.organization",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mediap_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["user__last_name", "user__first_name"],
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        default="#007bff",
                        help_text="Hex color code for visual identification",
                        max_length=7,
                    ),
                ),
                (
                    "default_capacity",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Default number of team members available for scheduling",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams",
                        to="core.organization",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_teams",
                        to="core.userprofile",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_teams",
                        to="core.userprofile",
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        blank=True, related_name="teams", to="core.userprofile"
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="JobType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "default_duration_hours",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                (
                    "color",
                    models.CharField(
                        default="#007bff",
                        help_text="Hex color code for calendar/UI display",
                        max_length=7,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Category for grouping job types",
                        max_length=50,
                    ),
                ),
                (
                    "required_skills",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of required skills/qualifications",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_types",
                        to="core.organization",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_job_types",
                        to="core.userprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="CalendarEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("personal", "Personal"),
                            ("team", "Team"),
                            ("organization", "Organization"),
                            ("system", "System"),
                        ],
                        default="personal",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("location", models.CharField(blank=True, max_length=200)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("is_all_day", models.BooleanField(default=False)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                (
                    "content_type",
                    models.CharField(
                        blank=True,
                        help_text="Model type this event relates to",
                        max_length=100,
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        blank=True, help_text="ID of the related object", max_length=100
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#007bff",
                        help_text="Hex color code for calendar display",
                        max_length=7,
                    ),
                ),
                ("is_recurring", models.BooleanField(default=False)),
                (
                    "recurrence_pattern",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Recurrence pattern configuration",
                    ),
                ),
                ("is_cancelled", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calendar_events",
                        to="core.organization",
                    ),
                ),
                (
                    "related_team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="team_events",
                        to="core.team",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_events",
                        to="core.userprofile",
                    ),
                ),
                (
                    "invitees",
                    models.ManyToManyField(
                        blank=True, related_name="invited_events", to="core.userprofile"
                    ),
                ),
            ],
            options={
                "ordering": ["start_time"],
            },
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["slug"], name="core_organi_slug_517c11_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["is_active"], name="core_organi_is_acti_9518a1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["organization", "is_active"],
                name="core_userpr_organiz_963b82_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(fields=["user"], name="core_userpr_user_id_830b32_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="userprofile",
            unique_together={("user", "organization")},
        ),
        migrations.AddIndex(
            model_name="team",
            index=models.Index(
                fields=["organization", "is_active"],
                name="core_team_organiz_6c0e3d_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="team",
            unique_together={("organization", "name")},
        ),
        migrations.AddIndex(
            model_name="jobtype",
            index=models.Index(
                fields=["organization", "is_active"],
                name="core_jobtyp_organiz_5200bf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="jobtype",
            index=models.Index(
                fields=["category"], name="core_jobtyp_categor_b32392_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="jobtype",
            unique_together={("organization", "name")},
        ),
        migrations.AddIndex(
            model_name="calendarevent",
            index=models.Index(
                fields=["organization", "start_time"],
                name="core_calend_organiz_512f78_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="calendarevent",
            index=models.Index(
                fields=["event_type", "start_time"],
                name="core_calend_event_t_e9edd7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="calendarevent",
            index=models.Index(
                fields=["created_by", "start_time"],
                name="core_calend_created_91de16_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="calendarevent",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="core_calend_content_d72d2e_idx",
            ),
        ),
    ]

# Generated by Django 5.1.2 on 2025-09-03 20:57

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_organization_userprofile_team_jobtype_calendarevent_and_more'),
        ('cflows', '0002_update_foreign_keys_to_core'),
    ]

    operations = [
        # Create WorkflowTemplate model
        migrations.CreateModel(
            name='WorkflowTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(default='General', max_length=100)),
                ('is_public', models.BooleanField(default=False, help_text='Available to all organizations')),
                ('template_data', models.JSONField(default=dict, help_text='Template configuration for steps and transitions')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_templates', to='core.organization')),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        
        # Add fields to Workflow
        migrations.AddField(
            model_name='workflow',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflows', to='cflows.workflowtemplate'),
        ),
        migrations.AddField(
            model_name='workflow',
            name='version',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='workflow',
            name='is_shared',
            field=models.BooleanField(default=False, help_text='Share with other organizations'),
        ),
        migrations.AddField(
            model_name='workflow',
            name='auto_assign',
            field=models.BooleanField(default=False, help_text='Auto-assign work items to team members'),
        ),
        migrations.AddField(
            model_name='workflow',
            name='requires_approval',
            field=models.BooleanField(default=False, help_text='Workflow changes require approval'),
        ),
        migrations.AddField(
            model_name='workflow',
            name='allowed_organizations',
            field=models.ManyToManyField(blank=True, related_name='shared_workflows', to='core.organization'),
        ),
        
        # Add enhanced fields to WorkItem
        migrations.AddField(
            model_name='workitem',
            name='rich_content',
            field=models.TextField(blank=True, help_text='Rich HTML content for detailed descriptions'),
        ),
        migrations.AddField(
            model_name='workitem',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('critical', 'Critical')], default='normal', max_length=10),
        ),
        migrations.AddField(
            model_name='workitem',
            name='tags',
            field=models.JSONField(default=list, help_text='List of tags for categorization'),
        ),
        migrations.AddField(
            model_name='workitem',
            name='watchers',
            field=models.ManyToManyField(blank=True, related_name='watched_work_items', to='core.userprofile'),
        ),
        migrations.AddField(
            model_name='workitem',
            name='depends_on',
            field=models.ManyToManyField(blank=True, related_name='dependents', to='cflows.workitem'),
        ),
        migrations.AddField(
            model_name='workitem',
            name='due_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='workitem',
            name='estimated_duration',
            field=models.DurationField(blank=True, help_text='Estimated time to complete', null=True),
        ),
        
        # Create WorkItemAttachment model
        migrations.CreateModel(
            name='WorkItemAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='cflows/attachments/%Y/%m/%d/')),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True)),
                ('work_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='cflows.workitem')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.userprofile')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        
        # Create WorkItemComment model
        migrations.CreateModel(
            name='WorkItemComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_system_comment', models.BooleanField(default=False, help_text='Auto-generated system comment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.userprofile')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='cflows.workitemcomment')),
                ('work_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='cflows.workitem')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        
        # Create WorkItemRevision model
        migrations.CreateModel(
            name='WorkItemRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision_number', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('rich_content', models.TextField(blank=True)),
                ('data', models.JSONField(default=dict)),
                ('change_summary', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.userprofile')),
                ('work_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='cflows.workitem')),
            ],
            options={
                'ordering': ['-revision_number'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='workitemrevision',
            unique_together={('work_item', 'revision_number')},
        ),
    ]


class Migration(migrations.Migration):

    dependencies = [
        ('cflows', '0002_update_foreign_keys_to_core'),
    ]

    operations = [
    ]
